openapi: 3.0.3
info:
  title: Livepost
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/posts?page=1'
                    last: 'http://localhost/api/v1/posts?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/posts?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/posts'
                    per_page: 20
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/posts?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/posts?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/posts?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/posts'
                      per_page:
                        type: integer
                        example: 20
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dignissimos
                body:
                  type: string
                  description: ''
                  example: sed
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: {  }
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Post] 15'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Post] 15'
      tags:
        - Endpoints
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 15
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: 'Gets a list of users.'
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 16
                      name: 'Fidel Johns'
                      email: misty.wintheiser@example.com
                      created_at: '2024-10-03 09:08:25'
                      updated_at: '2024-10-03 09:08:25'
                    -
                      id: 17
                      name: 'Rodrick Bashirian'
                      email: jaren.koss@example.org
                      created_at: '2024-10-03 09:08:25'
                      updated_at: '2024-10-03 09:08:25'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 16
                        name: 'Fidel Johns'
                        email: misty.wintheiser@example.com
                        created_at: '2024-10-03 09:08:25'
                        updated_at: '2024-10-03 09:08:25'
                      -
                        id: 17
                        name: 'Rodrick Bashirian'
                        email: jaren.koss@example.org
                        created_at: '2024-10-03 09:08:25'
                        updated_at: '2024-10-03 09:08:25'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 16
                        name:
                          type: string
                          example: 'Fidel Johns'
                        email:
                          type: string
                          example: misty.wintheiser@example.com
                        created_at:
                          type: string
                          example: '2024-10-03 09:08:25'
                        updated_at:
                          type: string
                          example: '2024-10-03 09:08:25'
      tags:
        - 'User Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 19
                    name: 'Bernita Spencer'
                    email: conner.bergstrom@example.com
                    created_at: '2024-10-03 09:08:25'
                    updated_at: '2024-10-03 09:08:25'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      name:
                        type: string
                        example: 'Bernita Spencer'
                      email:
                        type: string
                        example: conner.bergstrom@example.com
                      created_at:
                        type: string
                        example: '2024-10-03 09:08:25'
                      updated_at:
                        type: string
                        example: '2024-10-03 09:08:25'
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
              required:
                - name
                - email
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 18
                    name: 'Cesar Bosco DVM'
                    email: windler.arlo@example.net
                    created_at: '2024-10-03 09:08:25'
                    updated_at: '2024-10-03 09:08:25'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      name:
                        type: string
                        example: 'Cesar Bosco DVM'
                      email:
                        type: string
                        example: windler.arlo@example.net
                      created_at:
                        type: string
                        example: '2024-10-03 09:08:25'
                      updated_at:
                        type: string
                        example: '2024-10-03 09:08:25'
      tags:
        - 'User Management'
      security: []
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 20
                    name: 'Maia Herman'
                    email: lorenza.bechtelar@example.org
                    created_at: '2024-10-03 09:08:25'
                    updated_at: '2024-10-03 09:08:25'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: 'Maia Herman'
                      email:
                        type: string
                        example: lorenza.bechtelar@example.org
                      created_at:
                        type: string
                        example: '2024-10-03 09:08:25'
                      updated_at:
                        type: string
                        example: '2024-10-03 09:08:25'
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - 'User Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User ID'
        example: 5
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User Management'
    description: "\nAPIs to manage the user resource."
